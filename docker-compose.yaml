version: '3'

services:

  prometheus:
    # prometheus http://localhost:9090/targets
    # micrometer
    #   json http://localhost:9000/q/metrics/json
    #   prometheus http://localhost:9000/q/metrics/prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./configuration/prometheus.yml:/etc/prometheus/prometheus.yml:Z
    networks:
      - my-network

  jaeger:
    # jaeger ui http://localhost:16686
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 5775:5775
      - 6831:6831
      - 6832:6832
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
      - 4317:4317
    networks:
      - my-network

  zookeeper:
    image: strimzi/kafka:latest-kafka-2.6.0
    hostname: zookeeper
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      LOG_DIR: /tmp/logs
    networks:
      - my-network

  kafka:
    image: strimzi/kafka:latest-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_BROKER_ID: 1
    networks:
      - my-network

  movies-db:
    image: postgres:14
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=movieuser
      - POSTGRES_PASSWORD=redhat
      - POSTGRES_DB=moviesdb
    volumes:
      - ./init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql:Z
    networks:
      - my-network

  pgadmin:
    # pgadmin http://localhost:5050
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - my-network

networks:
  my-network:
    name: movie-network
  backend:
    name: jaeger-network
